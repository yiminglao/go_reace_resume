{"version":3,"sources":["components/MainMenu.tsx","components/PersonalCard.tsx","components/common/Title.tsx","components/content/AboutMe.tsx","components/content/ContactFrom.tsx","components/content/GitInfo.tsx","components/content/WorkExperience.tsx","components/content/Education.tsx","components/MainContent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","paddingTop","paddingBottom","iconColor","color","fontSize","button","height","listItemIcon","minWidth","NavMenu","onClick","icon","classes","ListItem","className","style","ListItemIcon","MainMenu","setActiveTab","List","component","content","padding","listItem","PersonalCard","Card","CardActionArea","CardMedia","alt","image","title","CardContent","ListItemText","primary","CardActions","Title","value","subTitle","Grid","item","xs","Typography","variant","display","AboutMe","Container","maxWidth","align","inputField","marginTop","marginBottom","margin","spacing","ContactFrom","TextField","fullWidth","size","label","defaultValue","multiline","rows","Button","endIcon","inline","GitInfo","alignItems","ListItemAvatar","Avatar","src","secondary","Fragment","Divider","WorkExperience","Education","MainContent","activeTab","container","direction","borderRadius","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d25ce578.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, List, ListItem, ListItemIcon, Theme, createStyles } from '@material-ui/core';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\nimport WorkOutlineRoundedIcon from '@material-ui/icons/WorkOutlineRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '80px',\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0\n\t\t},\n\t\ticonColor: {\n\t\t\tcolor: 'black',\n\t\t\tfontSize: '50px'\n\t\t},\n\t\tbutton: {\n\t\t\theight: '80px',\n\t\t\twidth: '80px'\n\t\t},\n\t\tlistItemIcon: {\n\t\t\tminWidth: '50px'\n\t\t}\n\t})\n);\n\nconst NavMenu = ({ onClick, icon, color }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<ListItem button className={classes.button} onClick={onClick} style={{ backgroundColor: color }}>\n\t\t\t<ListItemIcon className={classes.listItemIcon}>{icon}</ListItemIcon>\n\t\t</ListItem>\n\t);\n};\n\nconst MainMenu = ({ setActiveTab }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<List component='nav' className={classes.root}>\n\t\t\t<NavMenu onClick={() => setActiveTab('AboutMe')} icon={<AssignmentIndIcon className={classes.iconColor} />} color='#438945' />\n\t\t\t<NavMenu onClick={() => setActiveTab('Education')} icon={<SchoolRoundedIcon className={classes.iconColor} />} color='#EBA63F' />\n\t\t\t<NavMenu onClick={() => setActiveTab('WorkExperience')} icon={<WorkOutlineRoundedIcon className={classes.iconColor} />} color='#3CBCC3' />\n\t\t\t<NavMenu onClick={() => setActiveTab('GitInfo')} icon={<GitHubIcon className={classes.iconColor} />} color='#F7F4E9' />\n\t\t\t<NavMenu onClick={() => setActiveTab('ContactFrom')} icon={<MailOutlineRoundedIcon className={classes.iconColor} />} color='#FEDBC4' />\n\t\t</List>\n\t);\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Card, CardActionArea, CardMedia, CardContent, CardActions, makeStyles, ListItem, ListItemIcon, ListItemText, createStyles } from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: 260,\n\t\t\theight: 400\n\t\t},\n\t\tcontent: {\n\t\t\tpadding: 0\n\t\t},\n\t\tlistItem: {\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0\n\t\t}\n\t})\n);\n\nconst PersonalCard = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<CardActionArea>\n\t\t\t\t<CardMedia component='img' alt='Contemplative Reptile' image='./images/pic.jpg' title='Contemplative Reptile' />\n\t\t\t\t<CardContent className={classes.content}>\n\t\t\t\t\t<ListItem className={classes.listItem}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<AccountBoxIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary='Yiming Lao' />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem className={classes.listItem}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<EmailIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary='yiming.mp@gmail.com' />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem className={classes.listItem}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<PhoneAndroidIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary='1(801)668-9330' />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</CardContent>\n\t\t\t</CardActionArea>\n\t\t\t<CardActions>\n\t\t\t\t<LinkedInIcon fontSize='large' style={{ color: '#0073b1' }} />\n\t\t\t\t<GitHubIcon style={{ color: '#0073b1', fontSize: '26.25' }} />\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nexport default PersonalCard;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst Title = ({ value, subTitle = null }) => {\n\treturn (\n\t\t<Grid item xs>\n\t\t\t<Typography variant='h4' component='p' display='block'>\n\t\t\t\t{value}\n\t\t\t</Typography>\n\t\t\t{subTitle && (\n\t\t\t\t<Typography variant='h4' component='p' display='block'>\n\t\t\t\t\t{subTitle}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n\nexport default Title;\n","import React, { Fragment } from 'react';\nimport { Typography, Container } from '@material-ui/core';\nimport Title from '../common/Title';\n\nconst AboutMe = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Title value='About Me' subTitle='Software developer' />\n\t\t\t<Container maxWidth='lg' style={{ height: 300 }}>\n\t\t\t\t<Typography variant='body1' component='p' align='left'>\n\t\t\t\t\tAt Helio Training, we offer bootcamps which prepare you to work in the tech industry. <br /> You’ll learn in an intense, tech-focused environment from instructors who are passionate educators with years of experience in the tech\n\t\t\t\t\tindustry. You’ll learn leading-edge development skills while you work on real-world projects with industry partners such as the Utah Jazz and Larry H. Miller Sports and Entertainment. Best of all, you’ll graduate with the skills\n\t\t\t\t\tyou need to launch your new career. At Helio Training, we offer bootcamps\n\t\t\t\t</Typography>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default AboutMe;\n","import React, { Fragment } from 'react';\nimport { Container, TextField, createStyles, makeStyles, Theme, Button } from '@material-ui/core';\nimport Title from '../common/Title';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tinputField: {\n\t\t\tmarginTop: 8,\n\t\t\tmarginBottom: 8,\n\t\t\tfontSize: '12px'\n\t\t},\n\t\tbutton: {\n\t\t\tmargin: theme.spacing(1)\n\t\t}\n\t})\n);\n\nconst ContactFrom = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Fragment>\n\t\t\t<Title value='Contact Me' />\n\t\t\t<Container maxWidth='lg'>\n\t\t\t\t<TextField className={classes.inputField} fullWidth size='small' label='Name' defaultValue='Hello World' variant='outlined' />\n\t\t\t\t<TextField className={classes.inputField} fullWidth size='small' label='Email' defaultValue='Hello World' variant='outlined' />\n\t\t\t\t<TextField className={classes.inputField} fullWidth size='small' label='Subject' defaultValue='Hello World' variant='outlined' />\n\t\t\t\t<TextField className={classes.inputField} fullWidth size='small' label='Message' multiline rows='4' defaultValue='Default Value' variant='outlined' />\n\t\t\t\t<Button variant='contained' color='default' className={classes.button} endIcon={<SendIcon />}>\n\t\t\t\t\tSend\n\t\t\t\t</Button>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default ContactFrom;\n","import React, { Fragment } from 'react';\nimport { Container, createStyles, makeStyles, Theme, List, ListItem, ListItemAvatar, Avatar, ListItemText, Typography, Divider } from '@material-ui/core';\nimport Title from '../common/Title';\n\nconst useStyles = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%'\n\t\t},\n\t\tinline: {\n\t\t\tdisplay: 'inline'\n\t\t}\n\t})\n);\n\nconst GitInfo = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Fragment>\n\t\t\t<Title value='Projects' />\n\t\t\t<Container maxWidth='lg' style={{ height: 300 }}>\n\t\t\t\t<List className={classes.root}>\n\t\t\t\t\t<ListItem alignItems='flex-start'>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src='/static/images/avatar/1.jpg' />\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary='Brunch this weekend?'\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography component='span' variant='body2' className={classes.inline} color='textPrimary'>\n\t\t\t\t\t\t\t\t\t\tAli Connors\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t{\" — I'll be in your neighborhood doing errands this…\"}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider variant='inset' component='li' />\n\t\t\t\t\t<ListItem alignItems='flex-start'>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src='/static/images/avatar/1.jpg' />\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary='Brunch this weekend?'\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography component='span' variant='body2' className={classes.inline} color='textPrimary'>\n\t\t\t\t\t\t\t\t\t\tAli Connors\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t{\" — I'll be in your neighborhood doing errands this…\"}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider variant='inset' component='li' />\n\t\t\t\t</List>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default GitInfo;\n","import React, { Fragment } from 'react';\nimport { Container, createStyles, makeStyles, Theme, List, ListItem, ListItemAvatar, Avatar, ListItemText, Typography, Divider } from '@material-ui/core';\nimport Title from '../common/Title';\n\nconst useStyles = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%'\n\t\t},\n\t\tinline: {\n\t\t\tdisplay: 'inline'\n\t\t}\n\t})\n);\n\nconst WorkExperience = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Fragment>\n\t\t\t<Title value='Work Experience' />\n\t\t\t<Container maxWidth='lg' style={{ height: 300 }}>\n\t\t\t\t<List className={classes.root}>\n\t\t\t\t\t<ListItem alignItems='flex-start'>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar alt='bc logo' src='./images/bc_logo.png' />\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary='Basecamp Franchising '\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography component='span' variant='body2' className={classes.inline} color='textPrimary'>\n\t\t\t\t\t\t\t\t\t\tSoftware developer — Salt Lake City ​\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default WorkExperience;\n","import React, { Fragment } from 'react';\nimport { Container, createStyles, makeStyles, Theme, List, ListItem, ListItemAvatar, Avatar, ListItemText, Typography, Divider } from '@material-ui/core';\nimport Title from '../common/Title';\n\nconst useStyles = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%'\n\t\t},\n\t\tinline: {\n\t\t\tdisplay: 'inline'\n\t\t}\n\t})\n);\n\nconst Education = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Fragment>\n\t\t\t<Title value='EDUCATION' />\n\t\t\t<Container maxWidth='lg' style={{ height: 300 }}>\n\t\t\t\t<List className={classes.root}>\n\t\t\t\t\t<ListItem alignItems='flex-start'>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src='./images/weber_logo.png' />\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary='Weber State University'\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography component='span' variant='body2' className={classes.inline} color='textPrimary'>\n\t\t\t\t\t\t\t\t\t\tBachelor in Computer Science\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t{' — 08/2015 - 12/2018'}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider variant='inset' component='li' />\n\t\t\t\t\t<ListItem alignItems='flex-start'>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar alt='udemy' src='./images/udemy_logo.png' />\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary='udemy'\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography component='span' variant='body2' className={classes.inline} color='textPrimary'>\n\t\t\t\t\t\t\t\t\t\tSelf Study\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider variant='inset' component='li' />\n\t\t\t\t</List>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default Education;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport AboutMe from './content/AboutMe';\nimport ContactFrom from './content/ContactFrom';\nimport GitInfo from './content/GitInfo';\nimport WorkExperience from './content/WorkExperience';\nimport Education from './content/Education';\n\nconst MainContent = ({ activeTab }) => {\n\treturn (\n\t\t<Grid container direction='row'>\n\t\t\t{activeTab === 'AboutMe' && <AboutMe />}\n\t\t\t{activeTab === 'ContactFrom' && <ContactFrom />}\n\t\t\t{activeTab === 'GitInfo' && <GitInfo />}\n\t\t\t{activeTab === 'WorkExperience' && <WorkExperience />}\n\t\t\t{activeTab === 'Education' && <Education />}\n\t\t</Grid>\n\t);\n};\n\nexport default MainContent;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Container, Grid, makeStyles, createStyles } from '@material-ui/core';\nimport MainMenu from './components/MainMenu';\nimport PersonalCard from './components/PersonalCard';\nimport MainContent from './components/MainContent';\n\nconst useStyles = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackgroundColor: '#f7f7f7',\n\t\t\tborderRadius: '5px',\n\t\t\tminWidth: 900,\n\t\t\tmaxWidth: 1200\n\t\t}\n\t})\n);\n\nconst App = () => {\n\tconst classes = useStyles();\n\tconst [activeTab, setActiveTab] = useState('AboutMe');\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Container maxWidth='lg' style={{ marginTop: '35px' }}>\n\t\t\t\t<Grid container direction='row' className={classes.root}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<PersonalCard />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<MainMenu setActiveTab={setActiveTab} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs container>\n\t\t\t\t\t\t<MainContent activeTab={activeTab} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}